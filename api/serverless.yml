service: iwanttoreadmore

app: iwanttoreadmore
org: haltakov

stage: dev
region: us-east-1

provider:
    name: aws
    runtime: python3.8
    cfnRole: arn:aws:iam::018469183656:role/IWTRMCloudFormationRole
    environment:
        VOTES_TABLE: ${self:service}-votes-${opt:stage, self:provider.stage}
        USERS_TABLE: ${self:service}-users-${opt:stage, self:provider.stage}
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.VOTES_TABLE}"
        - Effect: Allow
          Action:
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.USERS_TABLE}"
        - Effect: Allow
          Action:
              - ssm:GetParameter
          Resource: "arn:aws:ssm:us-east-1:018469183656:parameter/IWANTTOREADMORE_COOKIE_SECRET"

plugins:
    - serverless-python-requirements

custom:
    pythonRequirements:
        dockerizePip: non-linux

functions:
    vote:
        handler: iwanttoreadmore/handlers/vote.add_vote
        memorySize: 128
        events:
            - http:
                  path: vote/{user}/{project}/{topic}
                  method: post
                  cors: true
    vote_and_redirect:
        handler: iwanttoreadmore/handlers/vote.add_vote_and_redirect
        memorySize: 1024
        events:
            - http:
                  path: vote/{user}/{project}/{topic}
                  method: get
                  cors: true
    get_votes_for_user:
        handler: iwanttoreadmore/handlers/vote.get_votes_for_user
        memorySize: 1024
        events:
            - http:
                  path: votes/{user}
                  method: get
                  cors: true
    get_votes_for_project:
        handler: iwanttoreadmore/handlers/vote.get_votes_for_project
        memorySize: 1024
        events:
            - http:
                  path: votes/{user}/{project}
                  method: get
                  cors: true
    login_user:
        handler: iwanttoreadmore/handlers/user.login_user
        memorySize: 2048
        events:
            - http:
                  path: user/login
                  method: post
                  cors: true
    check_user_logged_in:
        handler: iwanttoreadmore/handlers/user.check_user_logged_in
        memorySize: 2048
        events:
            - http:
                  path: user/loggedin
                  method: get
                  cors: true
    chage_password:
        handler: iwanttoreadmore/handlers/user.change_password
        memorySize: 2048
        events:
            - http:
                  path: user/changepassword
                  method: post
                  cors: true

resources:
    Resources:
        IWTRMDynamoDbTable:
            Type: "AWS::DynamoDB::Table"
            DeletionPolicy: Retain
            Properties:
                AttributeDefinitions:
                    - AttributeName: User
                      AttributeType: S
                    - AttributeName: TopicKey
                      AttributeType: S
                KeySchema:
                    - AttributeName: User
                      KeyType: HASH
                    - AttributeName: TopicKey
                      KeyType: RANGE
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
                TableName: ${self:provider.environment.VOTES_TABLE}
        IWTRMUsersDynamoDbTable:
            Type: "AWS::DynamoDB::Table"
            DeletionPolicy: Retain
            Properties:
                AttributeDefinitions:
                    - AttributeName: User
                      AttributeType: S
                KeySchema:
                    - AttributeName: User
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
                TableName: ${self:provider.environment.USERS_TABLE}
